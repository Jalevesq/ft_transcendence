version: '3.8'

networks:
  proxy_to_backend_network:
    driver: bridge

  database_network:
    driver: bridge

services:
  backend:
    container_name: backend
    restart: on-failure:5
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app/
      # - media:/usr/src/app/media/ For correction later
      - init_flag:/usr/src/init
    ports:
      - '8000:8000'
    env_file:
      - ./backend/.env
    networks:
      - proxy_to_backend_network
      - database_network
    depends_on:
      - redis

  postgres:
    container_name: postgres
    image: postgres:alpine3.18
    restart: on-failure:5
    volumes:
      - database-postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - database_network
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    container_name: redis
    image: redis:7.2.3-alpine3.19
    restart: on-failure:5
    volumes:
      - database-redis:/data
    ports:
      - '6379:6379'
    networks:
      - database_network
    depends_on:
      - postgres

  nginx:
    container_name: nginx
    restart: on-failure:5
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "443:443"
    networks:
      - proxy_to_backend_network
    volumes:
      - ./frontend:/etc/frontend
    depends_on:
      - backend

volumes:
  init_flag:
  database-postgres:
  database-redis:
  # media: For correction later
