version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - '3001:3001'
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app/
    ports:
      - '8000:8000'
    env_file:
      - ./backend/.env
    depends_on:
      - redis

  postgres:
    container_name: postgres
    image: postgres:alpine3.18
    restart: unless-stopped
    volumes:
      - ./database-postgres:/var/lib/postgresql/data
      # - ./postgres/config/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    container_name: redis
    image: redis:7.2.3-alpine3.19
    restart: unless-stopped
    volumes:
      - ./database-redis:/data
    ports:
      - '6379:6379'
    depends_on:
      - postgres

  nginx:
    container_name: nginx
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "8080:80"
      - "443:443"
    depends_on:
      - frontend